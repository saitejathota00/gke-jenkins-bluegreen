name: Terraform Destroy - GKE Infra

on:
  workflow_dispatch:
    inputs:
      directory:
        description: "Terraform root directory"
        required: true
        default: terraform
      name:
        description: "Name variable"
        required: true
        default: demo
      auto_approve:
        description: "Skip manual approval? (true/false)"
        required: false
        default: "false"
      confirm:
        description: "Type exactly: I UNDERSTAND THIS WILL DELETE RESOURCES"
        required: true
        default: ""

env:
  PROJECT_ID:      ${{ secrets.GCP_PROJECT_ID }}
  REGION:          ${{ secrets.GCP_REGION }}
  ZONE:            ${{ secrets.GCP_ZONE }}
  TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}

permissions:
  contents: read

jobs:
  plan:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.confirm == 'I UNDERSTAND THIS WILL DELETE RESOURCES' }}
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with: { credentials_json: ${{ secrets.GCP_SA_KEY }} }
      - uses: google-github-actions/setup-gcloud@v2
        with: { project_id: ${{ env.PROJECT_ID }} }
      - uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: |
          terraform -chdir="${{ github.event.inputs.directory }}" init -input=false -reconfigure \
            -backend-config="bucket=${TF_STATE_BUCKET}" \
            -backend-config="prefix=gke/state"
      - run: terraform -chdir="${{ github.event.inputs.directory }}" validate
      - name: Plan (destroy)
        run: |
          terraform -chdir="${{ github.event.inputs.directory }}" plan -destroy -input=false -out=tfplan.destroy \
            -var="project_id=${PROJECT_ID}" -var="region=${REGION}" -var="zone=${ZONE}" \
            -var="name=${{ github.event.inputs.name }}"
      - run: terraform -chdir="${{ github.event.inputs.directory }}" show -no-color tfplan.destroy | tee destroy-plan.txt
      - uses: actions/upload-artifact@v4
        with:
          name: tf-destroy-plan
          path: |
            ${{ github.event.inputs.directory }}/tfplan.destroy
            destroy-plan.txt

  apply:
    needs: plan
    runs-on: ubuntu-latest
    if: ${{ needs.plan.result == 'success' && github.event.inputs.auto_approve == 'true' }}
    environment: { name: production }   # Gate with Environment approval if you want
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with: { credentials_json: ${{ secrets.GCP_SA_KEY }} }
      - uses: google-github-actions/setup-gcloud@v2
        with: { project_id: ${{ env.PROJECT_ID }} }
      - uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: |
          terraform -chdir="${{ github.event.inputs.directory }}" init -input=false -reconfigure \
            -backend-config="bucket=${TF_STATE_BUCKET}" \
            -backend-config="prefix=gke/state"
      - uses: actions/download-artifact@v4
        with:
          name: tf-destroy-plan
          path: ${{ github.event.inputs.directory }}
      - name: Apply (destroy)
        run: terraform -chdir="${{ github.event.inputs.directory }}" apply -input=false -auto-approve tfplan.destroy

